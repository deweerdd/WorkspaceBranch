name: 'Terraform WordPress'
on:
  push:
    branches:
      - main
      - development
    paths:
      - '.github/workflows/terraform_wordpress_development.yml'
      - 'terraform/wordpress/development/**'
  pull_request:
    paths:
    - 'terraform/development/wordpress'
    - .github/workflows/terraform_wordpress_development.yml

env:
##When developing feature branch set Workspace
  WORKSPACE_NAME: "new_flow"

jobs:  
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: 
      name: ${{ needs.build.outputs.env_name }}
    defaults:
      run:
        shell: bash
        working-directory: terraform/development/wordpress

    steps:
      - uses: actions/checkout@v2
      
      ## Use Default workspace when branch is development
      - name: Override Workspace for development
        if: github.ref == 'refs/heads/development'
        run: |
          echo "WORKSPACE_NAME=default" >> $GITHUB_ENV

      - run: |
          echo "$WORKSPACE_NAME"

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-west-1
      
      - name: Cache terraform
        id: cache-primes
        uses: actions/cache@v2
        with:
          path: .terraform
          key: terraform-cache

      - uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init
        continue-on-error: true